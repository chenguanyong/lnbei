{
    "project": {
        "name": "jsplumb - Test Coverage",
        "description": "Visual connectivity for webapps",
        "version": "2.6.7",
        "url": ""
    },
    "files": {
        "tests/experiments/npm/browserify-test.js": {
            "name": "tests/experiments/npm/browserify-test.js",
            "modules": {},
            "classes": {
                "Mottle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tests/miscellaneous/issue_106_test/js/EndPoints.js": {
            "name": "tests/miscellaneous/issue_106_test/js/EndPoints.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js": {
            "name": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests/miscellaneous/exampleConnector.js": {
            "name": "tests/miscellaneous/exampleConnector.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests/unit/all/tests.js": {
            "name": "tests/unit/all/tests.js",
            "modules": {},
            "classes": {
                "": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "tests/unit/qunit-1.11.0.js": {
            "name": "tests/unit/qunit-1.11.0.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Mottle": {
            "name": "Mottle",
            "shortname": "Mottle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1023,
            "description": "Mottle offers support for abstracting out the differences\nbetween touch and mouse devices, plus \"smart click\" functionality\n(don't fire click if the mouse has moved between mousedown and mouseup),\nand synthesized click/tap events.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "params",
                    "description": "Constructor params",
                    "type": "Object",
                    "props": [
                        {
                            "name": "clickThreshold",
                            "description": "Threshold, in milliseconds beyond which a touchstart followed by a touchend is not considered to be a click.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "250"
                        },
                        {
                            "name": "dblClickThreshold",
                            "description": "Threshold, in milliseconds beyond which two successive tap events are not considered to be a click.",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "450"
                        },
                        {
                            "name": "smartClicks",
                            "description": "If true, won't fire click events if the mouse has moved between mousedown and mouseup. Note that this functionality\nrequires that Mottle consume the mousedown event, and so may not be viable in all use cases.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "": {
            "file": "tests/unit/all/tests.js",
            "line": 5,
            "name": "Test"
        }
    },
    "classitems": [
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12,
            "description": "jsBezier-0.8\n\nCopyright (c) 2010 - 2016 jsPlumb (hello@jsplumbtoolkit.com)\n\nlicensed under the MIT license.\n\na set of Bezier curve functions that deal with Beziers, used by jsPlumb, and perhaps useful for other people.  These functions work with Bezier\ncurves of arbitrary degree.\n\n- functions are all in the 'jsBezier' namespace.\n\n- all input points should be in the format {x:.., y:..}. all output points are in this format too.\n\n- all input curves should be in the format [ {x:.., y:..}, {x:.., y:..}, {x:.., y:..}, {x:.., y:..} ]\n\n- 'location' as used as an input here refers to a decimal in the range 0-1 inclusive, which indicates a point some proportion along the length\nof the curve.  location as output has the same format and meaning.\n\n\nFunction List:\n--------------\n\ndistanceFromCurve(point, curve)\n\n\tCalculates the distance that the given point lies from the given Bezier.  Note that it is computed relative to the center of the Bezier,\nso if you have stroked the curve with a wide pen you may wish to take that into account!  The distance returned is relative to the values\nof the curve and the point - it will most likely be pixels.\n\ngradientAtPoint(curve, location)\n\n\tCalculates the gradient to the curve at the given location, as a decimal between 0 and 1 inclusive.\n\ngradientAtPointAlongCurveFrom (curve, location)\n\n\tCalculates the gradient at the point on the given curve that is 'distance' units from location.\n\nnearestPointOnCurve(point, curve)\n\n\tCalculates the nearest point to the given point on the given curve.  The return value of this is a JS object literal, containing both the\npoint's coordinates and also the 'location' of the point (see above), for example:  { point:{x:551,y:150}, location:0.263365 }.\n\npointOnCurve(curve, location)\n\n\tCalculates the coordinates of the point on the given Bezier curve at the given location.\n\npointAlongCurveFrom(curve, location, distance)\n\n\tCalculates the coordinates of the point on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\nspace as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n\nlocationAlongCurveFrom(curve, location, distance)\n\n\tCalculates the location on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\nspace as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n\nperpendicularToCurveAt(curve, location, length, distance)\n\n\tCalculates the perpendicular to the given curve at the given location.  length is the length of the line you wish for (it will be centered\non the point at 'location'). distance is optional, and allows you to specify a point along the path from the given location as the center of\nthe perpendicular returned.  The return value of this is an array of two points: [ {x:...,y:...}, {x:...,y:...} ].",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 95,
            "description": "Calculates the distance that the point lies from the curve.",
            "params": [
                {
                    "name": "point",
                    "description": "a point in the form",
                    "type": "X:567, y:3342"
                },
                {
                    "name": "curve",
                    "description": "a Bezier curve in the form [, {x:..., y:...}, {x:..., y:...}, {x:..., y:...}].  note that this is currently\nhardcoded to assume cubiz beziers, but would be better off supporting any degree.",
                    "type": "x:..., y:..."
                }
            ],
            "return": {
                "description": "a JS object literal containing location and distance, for example: .  Location is analogous to the location\nargument you pass to the pointOnPath function: it is a ratio of distance travelled along the curve.  Distance is the distance in pixels from\nthe point to the curve.",
                "type": "location:0.35, distance:10"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 128,
            "description": "finds the nearest point on the curve to the given point.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 167,
            "description": "counts how many roots there are.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 301,
            "description": "calculates a point on the curve, for a Bezier of arbitrary order.",
            "params": [
                {
                    "name": "curve",
                    "description": "an array of control points, eg [, {x:50,y:50}, {x:100,y:100}, {x:120,y:100}].  For a cubic bezier this should have four points.",
                    "type": "X:10,y:20"
                },
                {
                    "name": "location",
                    "description": "a decimal indicating the distance along the curve the point should be located at.  this is the distance along the curve as it travels, taking the way it bends into account.  should be a number from 0 to 1, inclusive."
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 325,
            "description": "finds the point that is 'distance' along the path from 'location'.  this method returns both the x,y location of the point and also\nits 'location' (proportion of travel along the path); the method below - _pointAlongPathFrom - calls this method and just returns the\npoint.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 372,
            "description": "finds the point that is 'distance' along the path from 'location'.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 379,
            "description": "finds the location that is 'distance' along the path from 'location'.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 386,
            "description": "returns the gradient of the curve at the given location, which is a decimal between 0 and 1 inclusive.\n\nthanks // http://bimixual.org/AnimationLibrary/beziertangents.html",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 398,
            "description": "returns the gradient of the curve at the point which is 'distance' from the given location.\nif this point is greater than location 1, the gradient at location 1 is returned.\nif this point is less than location 0, the gradient at location 0 is returned.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 410,
            "description": "calculates a line that is 'length' pixels long, perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nif distance is not supplied, the perpendicular for the given location is computed (ie. we set distance to zero).",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 437,
            "description": "Biltong v0.3\n\nVarious geometry functions written as part of jsPlumb and perhaps useful for others.\n\nCopyright (c) 2016 jsPlumb\nhttps://jsplumbtoolkit.com\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 479,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates the gradient of a line between the two points.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The gradient of a line between the two points.",
                "type": "Float"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 497,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates the gradient of a normal to a line between the two points.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The gradient of a normal to a line between the two points.",
                "type": "Float"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 508,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates the length of a line between the two points.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The length of a line between the two points.",
                "type": "Float"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 521,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates the quadrant in which the angle between the two points lies.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The quadrant - 1 for upper right, 2 for lower right, 3 for lower left, 4 for upper left.",
                "type": "Integer"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 542,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates the angle between the two points.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "The angle between the two points.",
                "type": "Float"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 561,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates whether or not the two rectangles intersect.",
            "params": [
                {
                    "name": "r1",
                    "description": "First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`",
                    "type": "Rectangle"
                },
                {
                    "name": "r2",
                    "description": "Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`",
                    "type": "Rectangle"
                }
            ],
            "return": {
                "description": "True if the rectangles intersect, false otherwise.",
                "type": "Boolean"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 582,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates whether or not r2 is completely enclosed by r1.",
            "params": [
                {
                    "name": "r1",
                    "description": "First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`",
                    "type": "Rectangle"
                },
                {
                    "name": "r2",
                    "description": "Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`",
                    "type": "Rectangle"
                },
                {
                    "name": "allowSharedEdges",
                    "description": "If true, the concept of enclosure allows for one or more edges to be shared by the two rectangles.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "True if r1 encloses r2, false otherwise.",
                "type": "Boolean"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 600,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates a point on the line from `fromPoint` to `toPoint` that is `distance` units along the length of the line.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "Point on the line, in the form `{ x:..., y:... }`.",
                "type": "Point"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 617,
            "name": "",
            "itemtype": "method",
            "desc": "Calculates a line of length `length` that is perpendicular to the line from `fromPoint` to `toPoint` and passes through `toPoint`.",
            "params": [
                {
                    "name": "p1",
                    "description": "First point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                },
                {
                    "name": "p2",
                    "description": "Second point, either as a 2 entry array or object with `left` and `top` properties.",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "Perpendicular line, in the form `[ { x:..., y:... }, { x:..., y:... } ]`.",
                "type": "Line"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1059,
            "description": "Removes an element from the DOM, and deregisters all event handlers for it. You should use this\nto ensure you don't leak memory.",
            "itemtype": "method",
            "name": "remove",
            "params": [
                {
                    "name": "el",
                    "description": "Element, or id of the element, to remove.",
                    "type": "String|Element"
                }
            ],
            "return": {
                "description": "The current Mottle instance; you can chain this method.",
                "type": "Mottle"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1084,
            "description": "Register an event handler, optionally as a delegate for some set of descendant elements. Note\nthat this method takes either 3 or 4 arguments - if you supply 3 arguments it is assumed you have\nomitted the `children` parameter, and that the event handler should be bound directly to the given element.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "el",
                    "description": "Either an Element, or a CSS spec for a list of elements, or an array of Elements.",
                    "type": "Element[]|Element|String"
                },
                {
                    "name": "children",
                    "description": "Comma-delimited list of selectors identifying allowed children.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "event",
                    "description": "Event ID.",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Event handler function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The current Mottle instance; you can chain this method.",
                "type": "Mottle"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1105,
            "description": "Cancel delegate event handling for the given function. Note that unlike with 'on' you do not supply\na list of child selectors here: it removes event delegation from all of the child selectors for which the\ngiven function was registered (if any).",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "el",
                    "description": "Element - or ID of element - from which to remove event listener.",
                    "type": "Element[]|Element|String"
                },
                {
                    "name": "event",
                    "description": "Event ID.",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Event handler function.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The current Mottle instance; you can chain this method.",
                "type": "Mottle"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1120,
            "description": "Triggers some event for a given element.",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "el",
                    "description": "Element for which to trigger the event.",
                    "type": "Element"
                },
                {
                    "name": "event",
                    "description": "Event ID.",
                    "type": "String"
                },
                {
                    "name": "originalEvent",
                    "description": "The original event. Should be optional of course, but currently is not, due\nto the jsPlumb use case that caused this method to be added.",
                    "type": "Event"
                },
                {
                    "name": "payload",
                    "description": "Optional object to set as `payload` on the generated event; useful for message passing.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "The current Mottle instance; you can chain this method.",
                "type": "Mottle"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1209,
            "description": "Static method to assist in 'consuming' an element: uses `stopPropagation` where available, or sets\n`e.returnValue=false` where it is not.",
            "itemtype": "method",
            "name": "Mottle.consume",
            "params": [
                {
                    "name": "e",
                    "description": "Event to consume",
                    "type": "Event"
                },
                {
                    "name": "doNotPreventDefault",
                    "description": "If true, does not call `preventDefault()` on the event.",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1226,
            "description": "Gets the page location corresponding to the given event. For touch events this means get the page location of the first touch.",
            "itemtype": "method",
            "name": "Mottle.pageLocation",
            "params": [
                {
                    "name": "e",
                    "description": "Event to get page location for.",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "[left, top] for the given event.",
                "type": "Number[]"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1234,
            "description": "Forces touch events to be turned \"on\". Useful for testing: even if you don't have a touch device, you can still\ntrigger a touch event when this is switched on and it will be captured and acted on.",
            "itemtype": "method",
            "name": "setForceTouchEvents",
            "params": [
                {
                    "name": "value",
                    "description": "If true, force touch events to be on.",
                    "type": "Boolean"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1244,
            "description": "Forces mouse events to be turned \"on\". Useful for testing: even if you don't have a mouse, you can still\ntrigger a mouse event when this is switched on and it will be captured and acted on.",
            "itemtype": "method",
            "name": "setForceMouseEvents",
            "params": [
                {
                    "name": "value",
                    "description": "If true, force mouse events to be on.",
                    "type": "Boolean"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1256,
            "description": "drag/drop functionality for use with jsPlumb but with\nno knowledge of jsPlumb. supports multiple scopes (separated by whitespace), dragging\nmultiple elements, constrain to parent, drop filters, drag start filters, custom\ncss classes.\n\na lot of the functionality of this script is expected to be plugged in:\n\naddClass\nremoveClass\n\naddEvent\nremoveEvent\n\ngetPosition\nsetPosition\ngetSize\n\nindexOf\nintersects\n\nthe name came from here:\n\nhttp://mrsharpoblunto.github.io/foswig.js/\n\ncopyright 2016 jsPlumb",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1541,
            "description": "Sets whether or not the Drag is constrained. A value of 'true' means constrain to parent bounds; a function\nwill be executed and returns true if the position is allowed.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 1551,
            "description": "Sets a function to call on drag stop, which, if it returns true, indicates that the given element should\nrevert to its position before the previous drag.",
            "params": [
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2032,
            "description": "Gets the selector identifying which input elements to filter from drag events.",
            "itemtype": "method",
            "name": "getInputFilterSelector",
            "return": {
                "description": "Current input filter selector.",
                "type": "String"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2039,
            "description": "Sets the selector identifying which input elements to filter from drag events.",
            "itemtype": "method",
            "name": "setInputFilterSelector",
            "params": [
                {
                    "name": "selector",
                    "description": "Input filter selector to set.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Current instance; method may be chained.",
                "type": "Katavorio"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2087,
            "name": "",
            "itemtype": "method",
            "desc": "Adds an element to the current selection (for multiple node drag)",
            "params": [
                {
                    "name": "DOM",
                    "description": "element - or id of the element - to add.",
                    "type": "Element|String"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2107,
            "name": "",
            "itemtype": "method",
            "desc": "Removes an element from the current selection (for multiple node drag)",
            "params": [
                {
                    "name": "DOM",
                    "description": "element - or id of the element - to remove.",
                    "type": "Element|String"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2297,
            "description": "Add the given element to the posse with the given id, creating the group if it at first does not exist.",
            "itemtype": "method",
            "name": "addToPosse",
            "params": [
                {
                    "name": "el",
                    "description": "Element to add.",
                    "type": "Element"
                },
                {
                    "name": "spec",
                    "description": "Variable args parameters. Each argument can be a either a String, indicating\nthe ID of a Posse to which the element should be added as an active participant, or an Object containing\n`{ id:\"posseId\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\ntrue.",
                    "type": "String...|Object..."
                }
            ],
            "return": {
                "description": "The Posse(s) to which the element(s) was/were added.",
                "type": "Posse|Posse[]"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2318,
            "description": "Sets the posse(s) for the element with the given id, creating those that do not yet exist, and removing from\nthe element any current Posses that are not specified by this method call. This method will not change the\nactive/passive state if it is given a posse in which the element is already a member.",
            "itemtype": "method",
            "name": "setPosse",
            "params": [
                {
                    "name": "el",
                    "description": "Element to set posse(s) on.",
                    "type": "Element"
                },
                {
                    "name": "spec",
                    "description": "Variable args parameters. Each argument can be a either a String, indicating\nthe ID of a Posse to which the element should be added as an active participant, or an Object containing\n`{ id:\"posseId\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\ntrue.",
                    "type": "String...|Object..."
                }
            ],
            "return": {
                "description": "The Posse(s) to which the element(s) now belongs.",
                "type": "Posse|Posse[]"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2352,
            "description": "Remove the given element from the given posse(s).",
            "itemtype": "method",
            "name": "removeFromPosse",
            "params": [
                {
                    "name": "el",
                    "description": "Element to remove.",
                    "type": "Element"
                },
                {
                    "name": "posseId",
                    "description": "Varargs parameter: one value for each posse to remove the element from.",
                    "type": "String..."
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2375,
            "description": "Remove the given element from all Posses to which it belongs.",
            "itemtype": "method",
            "name": "removeFromAllPosses",
            "params": [
                {
                    "name": "el",
                    "description": "Element to remove from Posses.",
                    "type": "Element|Element[]"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2393,
            "description": "Changes the participation state for the element in the Posse with the given ID.",
            "params": [
                {
                    "name": "el",
                    "description": "Element(s) to change state for.",
                    "type": "Element|Element[]"
                },
                {
                    "name": "posseId",
                    "description": "ID of the Posse to change element state for.",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "True to make active, false to make passive.",
                    "type": "Boolean"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2738,
            "description": "Wraps one function with another, creating a placeholder for the\nwrapped function if it was null. this is used to wrap the various\ndrag/drop event functions - to allow jsPlumb to be notified of\nimportant lifecycle events without imposing itself on the user's\ndrag/drop functionality.",
            "itemtype": "method",
            "name": "jsPlumbUtil.wrap",
            "params": [
                {
                    "name": "wrappedFunction",
                    "description": "original function to wrap; may be null.",
                    "type": "Function"
                },
                {
                    "name": "newFunction",
                    "description": "function to wrap the original with.",
                    "type": "Function"
                },
                {
                    "name": "returnOnThisValue",
                    "description": "Optional. Indicates that the wrappedFunction should\nnot be executed if the newFunction returns a value matching 'returnOnThisValue'.\nnote that this is a simple comparison and only works for primitives right now.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 2977,
            "description": "creates a timestamp, using milliseconds since 1970, but as a string.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 3671,
            "description": "inits a draggable if it's not already initialised.\nTODO: somehow abstract this to the adapter, because the concept of \"draggable\" has no\nplace on the server.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 4047,
            "description": "private method to do the business of toggling hiding/showing.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 4073,
            "description": "gets an id for the given element, creating and setting one if\nnecessary.  the id is of the form\n\n   jsPlumb_<instance index>_<index in instance>\n\nwhere \"index in instance\" is a monotonically increasing integer that starts at 0,\nfor each instance.  this method is used not only to assign ids to elements that do not\nhave them but also to connections and endpoints.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 4106,
            "description": "Returns a map of all the elements this jsPlumbInstance is currently managing.",
            "return": {
                "description": "Map of [id-> {el, endpoint[], connection, position}] information.",
                "type": "Object"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 4214,
            "description": "checks for a listener for the given condition, executing it if found, passing in the given value.\ncondition listeners would have been attached using \"bind\" (which is, you could argue, now overloaded, since\nfiring click events etc is a bit different to what this does).  i thought about adding a \"bindCondition\"\nor something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these\ncondition events anyway.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 4890,
            "description": "updates the offset and size for a given element, and stores the\nvalues. if 'offset' is not null we use that (it would have been\npassed in from a drag call) because it's faster; but if it is null,\nor if 'recalc' is true in order to force a recalculation, we get the current values.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 4935,
            "description": "callback from the current library to tell us to prepare ourselves (attach\nmouse listeners etc; can't do that until the library has provided a bind method)",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 5036,
            "description": "makes a list of anchors from the given list of types or coords, eg\n[\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 5051,
            "description": "Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\nobjects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\nnot need to provide this - i think).",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 5753,
            "description": "Remove the given element, including cleaning up all endpoints registered for it.\nThis is exposed in the public API but also used internally by jsPlumb when removing the\nelement associated with a connection drag.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 6126,
            "description": "Manages dragging for some instance of jsPlumb.\n\nTODO instead of this being accessed directly, it should subscribe to events on the jsPlumb instance: every method\nin here is called directly by jsPlumb. But what should happen is that we have unpublished events that this listens\nto.  The only trick is getting one of these instantiated with every jsPlumb instance: it needs to have a hook somehow.\nBasically the general idea is to pull ALL the drag code out (prototype method registrations plus this) into a\ndedicated drag script), that does not necessarily need to be included.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 6142,
            "description": "register some element as draggable.  right now the drag init stuff is done elsewhere, and it is\npossible that will continue to be the case.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 6215,
            "description": "notification that an endpoint was added to the given el.  we go up from that el's parent\nnode, looking for a parent that has been registered as a draggable. if we find one, we add this\nel to that parent's list of elements to update on drag (if it is not there already)",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 6571,
            "description": "Gets the absolute position of some element as read from the left/top properties in its style.",
            "itemtype": "method",
            "name": "getAbsolutePosition",
            "params": [
                {
                    "name": "el",
                    "description": "The element to retrieve the absolute coordinates from. **Note** this is a DOM element, not a selector from the underlying library.",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "[left, top] pixel values.",
                "type": "Number[]"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 6585,
            "description": "Sets the absolute position of some element by setting the left/top properties in its style.",
            "itemtype": "method",
            "name": "setAbsolutePosition",
            "params": [
                {
                    "name": "el",
                    "description": "The element to set the absolute coordinates on. **Note** this is a DOM element, not a selector from the underlying library.",
                    "type": "Element"
                },
                {
                    "name": "xy",
                    "description": "x and y coordinates",
                    "type": "Number[]"
                },
                {
                    "name": "animateFrom",
                    "description": "Optional previous xy to animate from.",
                    "type": "Number[]",
                    "optional": true
                },
                {
                    "name": "animateOptions",
                    "description": "Options for the animation.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 6605,
            "description": "gets the size for the element, in an array : [ width, height ].",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 7284,
            "description": "private but must be exposed.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 7320,
            "description": "returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 7884,
            "description": "private but needs to be exposed.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9399,
            "description": "Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\nwas required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\nor by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\ncreation of Anchors without user intervention.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9468,
            "description": "An Anchor that floats. its orientation is computed dynamically from\nits position relative to the anchor it is floating relative to.  It is used when creating\na connection through drag and drop.\n\nTODO FloatingAnchor could totally be refactored to extend Anchor just slightly.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9526,
            "description": "notification the endpoint associated with this anchor is hovering\nover another anchor; we want to assume that anchor's orientation\nfor the duration of the hover.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9535,
            "description": "notification the endpoint associated with this anchor is no\nlonger hovering over another anchor; we should resume calculating\norientation as we normally do.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9896,
            "description": "Function: findClosestPointOnPath\nFinds the closest point on this segment to the given [x, y],\nreturning both the x and y of the point plus its distance from\nthe supplied point, and its location along the length of the\npath inscribed by the segment.  This implementation returns\nInfinity for distance and null values for everything else;\nsubclasses are expected to override.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9962,
            "description": "returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for the straight line segment this is simple maths.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9977,
            "description": "returns the gradient of the segment at the given point - which for us is constant.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 9984,
            "description": "returns the point on the segment's path that is 'distance' along the length of the path from 'location', where\n'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.\nthis hands off to jsPlumbUtil to do the maths, supplying two points and the distance.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10014,
            "description": "Function: findClosestPointOnPath\nFinds the closest point on this segment to [x,y]. See\nnotes on this method in AbstractSegment.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10163,
            "description": "returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10187,
            "description": "returns the gradient of the segment at the given point.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10237,
            "description": "returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10246,
            "description": "returns the gradient of the segment at the given point.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10333,
            "description": "Function: findSegmentForPoint\nReturns the segment that is closest to the given [x,y],\nnull if nothing found.  This function returns a JS\nobject with:\n\n  d   -   distance from segment\n  l   -   proportional location in segment\n  x   -   x point on the segment\n  y   -   y point on the segment\n  s   -   the segment itself.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10375,
            "description": "returns [segment, proportion of travel in segment, segment index] for the segment\nthat contains the point which is 'location' distance along the entire path, where\n'location' is a decimal between 0 and 1 inclusive. in this connector type, paths\nare made up of a list of segments, each of which contributes some fraction to\nthe total length.\nFrom 1.3.10 this also supports the 'absolute' property, which lets us specify a location\nas the absolute distance in pixels, rather than a proportion of the total path.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10542,
            "description": "Class: Connectors.Straight\nThe Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10585,
            "description": "Class: Endpoints.Dot\nA round endpoint, with default radius 10 pixels.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10590,
            "description": "Function: Constructor\n\nParameters:\n\n   radius    -    radius of the endpoint.  defaults to 10 pixels.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10655,
            "description": "Class: Endpoints.Image\nDraws an image as the Endpoint.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 10659,
            "description": "Function: Constructor\n\nParameters:\n\n   src    -    location of the image to use.\n\n    TODO: multiple references to self. not sure quite how to get rid of them entirely. perhaps self = null in the cleanup\n    function will suffice\n\n    TODO this class still might leak memory.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 11720,
            "params": [
                {
                    "name": "_jsPlumb",
                    "description": "Associated jsPlumb instance.",
                    "type": "JsPlumbInstance"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "el",
                            "description": "The DOM element representing the Group.",
                            "type": "Element"
                        },
                        {
                            "name": "id",
                            "description": "Optional ID for the Group. A UUID will be assigned as the Group's ID if you do not provide one.",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "constrain",
                            "description": "If true, child elements will not be able to be dragged outside of the Group container.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "revert",
                            "description": "By default, child elements revert to the container if dragged outside. You can change this by setting `revert:false`. This behaviour is also overridden if you set `orphan` or `prune`.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "orphan",
                            "description": "If true, child elements dropped outside of the Group container will be removed from the Group (but not from the DOM).",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "prune",
                            "description": "If true, child elements dropped outside of the Group container will be removed from the Group and also from the DOM.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "dropOverride",
                            "description": "If true, a child element that has been dropped onto some other Group will not be subject to the controls imposed by `prune`, `revert` or `orphan`.",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "is_constructor": 1,
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 11994,
            "description": "Adds a group to the jsPlumb instance.",
            "itemtype": "method",
            "name": "addGroup",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The newly created Group.",
                "type": "Group"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12014,
            "description": "Add an element to a group.",
            "itemtype": "method",
            "name": "addToGroup",
            "params": [
                {
                    "name": "group",
                    "description": "Group, or ID of the group, to add the element to.",
                    "type": "String"
                },
                {
                    "name": "el",
                    "description": "Element to add to the group.",
                    "type": "Element"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12024,
            "description": "Remove an element from a group.",
            "itemtype": "method",
            "name": "removeFromGroup",
            "params": [
                {
                    "name": "group",
                    "description": "Group, or ID of the group, to remove the element from.",
                    "type": "String"
                },
                {
                    "name": "el",
                    "description": "Element to add to the group.",
                    "type": "Element"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12034,
            "description": "Remove a group, and optionally remove its members from the jsPlumb instance.",
            "itemtype": "method",
            "name": "removeGroup",
            "params": [
                {
                    "name": "group",
                    "description": "Group to delete, or ID of Grrup to delete.",
                    "type": "String|Group"
                },
                {
                    "name": "deleteMembers",
                    "description": "If true, group members will be removed along with the group. Otherwise they will\njust be 'orphaned' (returned to the main container).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12045,
            "description": "Remove all groups, and optionally remove their members from the jsPlumb instance.",
            "itemtype": "method",
            "name": "removeAllGroup",
            "params": [
                {
                    "name": "deleteMembers",
                    "description": "If true, group members will be removed along with the groups. Otherwise they will\njust be 'orphaned' (returned to the main container).",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12055,
            "description": "Get a group",
            "itemtype": "method",
            "name": "getGroup",
            "params": [
                {
                    "name": "groupId",
                    "description": "ID of the group to get",
                    "type": "String"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12064,
            "description": "Expands a group element. jsPlumb doesn't do \"everything\" for you here, because what it means to expand a Group\nwill vary from application to application. jsPlumb does these things:\n\n- Hides any connections that are internal to the group (connections between members, and connections from member of\nthe group to the group itself)\n- Proxies all connections for which the source or target is a member of the group.\n- Hides the proxied connections.\n- Adds the jsplumb-group-expanded class to the group's element\n- Removes the jsplumb-group-collapsed class from the group's element.",
            "itemtype": "method",
            "name": "expandGroup",
            "params": [
                {
                    "name": "group",
                    "description": "Group to expand, or ID of Group to expand.",
                    "type": "String|Group"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12082,
            "description": "Collapses a group element. jsPlumb doesn't do \"everything\" for you here, because what it means to collapse a Group\nwill vary from application to application. jsPlumb does these things:\n\n- Shows any connections that are internal to the group (connections between members, and connections from member of\nthe group to the group itself)\n- Removes proxies for all connections for which the source or target is a member of the group.\n- Shows the previously proxied connections.\n- Adds the jsplumb-group-collapsed class to the group's element\n- Removes the jsplumb-group-expanded class from the group's element.",
            "itemtype": "method",
            "name": "expandGroup",
            "params": [
                {
                    "name": "group",
                    "description": "Group to expand, or ID of Group to expand.",
                    "type": "String|Group"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12105,
            "description": "Collapses or expands a group element depending on its current state. See notes in the collapseGroup and expandGroup method.",
            "itemtype": "method",
            "name": "toggleGroup",
            "params": [
                {
                    "name": "group",
                    "description": "Group to expand/collapse, or ID of Group to expand/collapse.",
                    "type": "String|Group"
                }
            ],
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12133,
            "description": "Gets the Group that the given element belongs to, null if none.",
            "itemtype": "method",
            "name": "getGroupFor",
            "params": [
                {
                    "name": "el",
                    "description": "Element, or element ID.",
                    "type": "String|Element"
                }
            ],
            "return": {
                "description": "A Group, if found, or null.",
                "type": "Group"
            },
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12189,
            "description": "helper method to add a segment.",
            "class": "Mottle"
        },
        {
            "file": "tests/experiments/npm/browserify-test.js",
            "line": 12980,
            "description": "utility methods for other objects to use.",
            "class": "Mottle"
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/EndPoints.js",
            "line": 10,
            "description": "first example endpoint.  it's a 25x21 rectangle (the size is provided in the 'style' arg to the Endpoint), and it's both a source\nand target.  the 'scope' of this Endpoint is 'exampleConnection', meaning any connection starting from this Endpoint is of type\n'exampleConnection' and can only be dropped on an Endpoint target that declares 'exampleEndpoint' as its drop scope, and also that\nonly 'exampleConnection' types can be dropped here.\n \nthe connection style for this endpoint is a Bezier curve (we didn't provide one, so we use the default), with a lineWidth of\n5 pixels, and a gradient.\n \nnote the use of the '$.extend' function to setup generic connection types.  this will save you a lot of typing, and probably\nerrors.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/EndPoints.js",
            "line": 98,
            "description": "the second example uses a Dot of radius 15 as the endpoint marker, is both a source and target, and has scope\n'exampleConnection2'.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/EndPoints.js",
            "line": 116,
            "description": "the third example uses a Dot of radius 17 as the endpoint marker, is both a source and target, and has scope\n'exampleConnection3'.  it uses a Straight connector, and the Anchor is created here (bottom left corner) and never\noverriden, so it appears in the same place on every element.\n\nthis example also sets the 'reattach' flag for the Endpoint, meaning that when you drag a\nconnection off an endpoint and release it, it snaps back.  the default behaviour in this case\nis to delete the connection.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 21,
            "description": "Class:jsPlumb\nThe jsPlumb engine, registered as a static object in the window.  This object contains all of the methods you will use to\ncreate and maintain Connections and Endpoints.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 63,
            "description": "helper method to add an item to a list, creating the list if it does\nnot yet exist.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 95,
            "description": "EventGenerator\nSuperclass for objects that generate events - jsPlumb extends this, as does jsPlumbUIComponent, which all the UI elements extend.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 353,
            "description": "map of element id -> endpoint lists. an element can have an arbitrary\nnumber of endpoints on it, and not all of them have to be connected\nto anything.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 372,
            "description": "helper method to add an item to a list, creating the list if it does\nnot yet exist.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 386,
            "description": "appends an element to the given parent, or the document body if no\nparent given.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 397,
            "description": "creates a timestamp, using milliseconds since 1970, but as a string.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 402,
            "description": "YUI, for some reason, put the result of a Y.all call into an object that contains\na '_nodes' array, instead of handing back an array-like object like the other\nlibraries do.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 411,
            "description": "Draws an endpoint and its connections.",
            "params": [
                {
                    "name": "element",
                    "description": "element to draw (of type library specific element object)"
                },
                {
                    "name": "ui",
                    "description": "UI object from current library's event system. optional."
                },
                {
                    "name": "timestamp",
                    "description": "timestamp for this paint cycle. used to speed things up a little by cutting down the amount of offset calculations we do."
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 452,
            "description": "executes the given function against the given element if the first\nargument is an object, or the list of elements, if the first argument\nis a list. the function passed in takes (element, elementId) as\narguments.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 473,
            "description": "gets an Endpoint by uuid.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 478,
            "description": "inits a draggable if it's not already initialised.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 540,
            "description": "performs the given function operation on all the connections found\nfor the given element id; this means we find all the endpoints for\nthe given element, and then for each endpoint find the connectors\nconnected to it. then we pass each connection in to the given\nfunction.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 560,
            "description": "perform an operation on all elements.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 569,
            "description": "helper to remove an element from the DOM.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 577,
            "description": "helper to remove a list of elements from the DOM.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 584,
            "description": "helper method to remove an item from a list.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 601,
            "description": "Sets whether or not the given element(s) should be draggable,\nregardless of what a particular plumb command may request.",
            "params": [
                {
                    "name": "element",
                    "description": "May be a string, a element objects, or a list of\n           strings/elements."
                },
                {
                    "name": "draggable",
                    "description": "Whether or not the given element(s) should be draggable."
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 619,
            "description": "private method to do the business of hiding/showing.",
            "params": [
                {
                    "name": "el",
                    "description": "either Id of the element in question or a library specific\n           object for the element."
                },
                {
                    "name": "state",
                    "description": "String specifying a value for the css 'display' property\n           ('block' or 'none')."
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 634,
            "description": "toggles the draggable state of the given element(s).",
            "params": [
                {
                    "name": "el",
                    "description": "either an id, or an element object, or a list of\n           ids/element objects."
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 650,
            "description": "private method to do the business of toggling hiding/showing.",
            "params": [
                {
                    "name": "elId",
                    "description": "Id of the element in question"
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 665,
            "description": "updates the offset and size for a given element, and stores the\nvalues. if 'offset' is not null we use that (it would have been\npassed in from a drag call) because it's faster; but if it is null,\nor if 'recalc' is true in order to force a recalculation, we get the current values.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 692,
            "description": "gets an id for the given element, creating and setting one if\nnecessary.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 710,
            "description": "wraps one function with another, creating a placeholder for the\nwrapped function if it was null. this is used to wrap the various\ndrag/drop event functions - to allow jsPlumb to be notified of\nimportant lifecycle events without imposing itself on the user's\ndrag/drop functionality. TODO: determine whether or not we should\nsupport an error handler concept, if one of the functions fails.",
            "params": [
                {
                    "name": "wrappedFunction",
                    "description": "original function to wrap; may be null."
                },
                {
                    "name": "newFunction",
                    "description": "function to wrap the original with."
                },
                {
                    "name": "returnOnThisValue",
                    "description": "Optional. Indicates that the wrappedFunction should \nnot be executed if the newFunction returns a value matching 'returnOnThisValue'.\nnote that this is a simple comparison and only works for primitives right now."
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1121,
            "deprecated": true,
            "deprecationMessage": "Use detachAllConnections instead.  this will be removed in jsPlumb 1.3.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1149,
            "deprecated": true,
            "deprecationMessage": "use detachEveryConnection instead.  this will be removed in jsPlumb 1.3.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1320,
            "description": "Function:getEndpoints\nGets the list of Endpoints for a given selector, or element id.",
            "params": [
                {
                    "name": "el",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1354,
            "description": "callback from the current library to tell us to prepare ourselves (attach\nmouse listeners etc; can't do that until the library has provided a bind method)",
            "return": {
                "description": ""
            },
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1467,
            "description": "makes a list of anchors from the given list of types or coords, eg\n[\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1481,
            "description": "Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\nobjects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\nnot need to provide this - i think).",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1490,
            "description": "Function: makeTarget\nMakes some DOM element a Connection target, allowing you to drag connections to it\nwithout having to register any Endpoints on it first.  When a Connection is established,\nthe endpoint spec that was passed in to this method is used to create a suitable \nEndpoint (the default will be used if you do not provide one).\n\nParameters:\n el\t\t-\tstring id or element selector for the element to make a target.\n\tparams\t-\tJS object containing parameters:\n\t  endpoint\toptional.\tspecification of an endpoint to create when a connection is created.\n\t  scope\t\toptional.   scope for the drop zone.\n\t  dropOptions optional. same stuff as you would pass to dropOptions of an Endpoint definition.\n\t  deleteEndpointsOnDetach  optional, defaults to false. whether or not to delete\n                            any Endpoints created by a connection to this target if\n                            the connection is subsequently detached. this will not \n                            remove Endpoints that have had more Connections attached\n                            to them after they were created.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1560,
            "description": "helper method to make a list of elements drop targets.",
            "params": [
                {
                    "name": "els",
                    "description": ""
                },
                {
                    "name": "params",
                    "description": ""
                },
                {
                    "name": "referenceParams",
                    "description": ""
                }
            ],
            "return": {
                "description": ""
            },
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1822,
            "description": "gets some test hooks. nothing writable.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1844,
            "description": "Toggles visibility of an element's connections. kept for backwards\ncompatibility",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1902,
            "description": "Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\nwas required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\nor by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\ncreation of Anchors without user intervention.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 1947,
            "description": "An Anchor that floats. its orientation is computed dynamically from\nits position relative to the anchor it is floating relative to.  It is used when creating \na connection through drag and drop.\n\nTODO FloatingAnchor could totally be refactored to extend Anchor just slightly.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2000,
            "description": "notification the endpoint associated with this anchor is hovering\nover another anchor; we want to assume that anchor's orientation\nfor the duration of the hover.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2007,
            "description": "notification the endpoint associated with this anchor is no\nlonger hovering over another anchor; we should resume calculating\norientation as we normally do.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2115,
            "description": "Function:isVisible\nReturns whether or not the Connection is currently visible.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2120,
            "description": "Function: setVisible\nSets whether or not the Connection should be visible.\n\nParameters:\n\tvisible - boolean indicating desired visible state.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2134,
            "description": "Property: source\nThe source element for this Connection.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2139,
            "description": "Property:target\nThe target element for this Connection.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2159,
            "description": "implementation of abstract method in EventGenerator",
            "return": {
                "description": "list of attached elements. in our case, a list of Endpoints."
            },
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2167,
            "description": "implementation of abstract method in EventGenerator",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2411,
            "description": "Function: removeAllOverlays\nRemoves all overlays from the Connection, and then repaints.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2420,
            "description": "Function:removeOverlay\nRemoves an overlay by ID.  Note: by ID.  this is a string you set in the overlay spec.\nParameters:\noverlayId - id of the overlay to remove.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2437,
            "description": "Function:removeOverlay\nRemoves an overlay by ID.  Note: by ID.  this is a string you set in the overlay spec.\nParameters:\noverlayIds - this function takes an arbitrary number of arguments, each of which is a single overlay id.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2845,
            "description": "private but must be exposed.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2871,
            "description": "private but needs to be exposed.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2878,
            "description": "returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2917,
            "description": "a deep equals check. everything must match, including the anchor,\nstyles, everything. TODO: finish Endpoint.equals",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 2972,
            "deprecated": true,
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3303,
            "description": "Helper class to consume unused mouse events by components that are DOM elements and\n are used by all of the different rendering modes.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3320,
            "description": "Class: Connectors.Straight\nThe Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3330,
            "description": "Computes the new size and position of the canvas.",
            "params": [
                {
                    "name": "sourceAnchor",
                    "description": "Absolute position on screen of the source object's anchor."
                },
                {
                    "name": "targetAnchor",
                    "description": "Absolute position on screen of the target object's anchor."
                },
                {
                    "name": "positionMatrix",
                    "description": "Indicates the relative positions of the left,top of the\n two plumbed objects.  so [0,0] indicates that the source is to the left of, and\n above, the target.  [1,0] means the source is to the right and above.  [0,1] means\n the source is to the left and below.  [1,1] means the source is to the right\n and below.  this is used to figure out which direction to draw the connector in."
                }
            ],
            "return": {
                "description": "an array of positioning information.  the first two values are\nthe [left, top] absolute position the canvas should be placed on screen.  the\nnext two values are the [width,height] the canvas should be.  after that each\nConnector can put whatever it likes into the array:it will be passed back in\nto the paint call.  This particular function stores the origin and destination of\nthe line it is going to draw.  a more involved implementation, like a Bezier curve,\nwould store the control point info in this array too."
            },
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3387,
            "description": "returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3397,
            "description": "returns the gradient of the connector at the given point - which for us is constant.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3402,
            "description": "returns the point on the connector's path that is 'distance' along the length of the path from 'location', where \n'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3416,
            "description": "calculates a line that is perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nthe line is 'length' pixels long.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3431,
            "description": "Class:Connectors.Bezier\nThis Connector draws a Bezier curve with two control points.  You can provide a 'curviness' value which gets applied to jsPlumb's\ninternal voodoo machine and ends up generating locations for the two control points.  See the constructor documentation below.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3436,
            "description": "Function:Constructor\n\nParameters:\n\tcurviness - How 'curvy' you want the curve to be! This is a directive for the placement of control points, not endpoints of the curve, so your curve does not \nactually touch the given point, but it has the tendency to lean towards it.  The larger this value, the greater the curve is pulled from a straight line.\nOptional; defaults to 150.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3537,
            "description": "returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3545,
            "description": "returns the gradient of the connector at the given point.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3552,
            "description": "for Bezier curves this method is a little tricky, cos calculating path distance algebraically is notoriously difficult.\nthis method is iterative, jumping forward .05% of the path at a time and summing the distance between this point and the previous\none, until the sum reaches 'distance'. the method may turn out to be computationally expensive; we'll see.\nanother drawback of this method is that if the connector gets quite long, .05% of the length of it is not necessarily smaller\nthan the desired distance, in which case the loop returns immediately and the arrow is mis-shapen. so a better strategy might be to\ncalculate the step as a function of distance/distance between endpoints.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3564,
            "description": "calculates a line that is perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nthe line is 'length' pixels long.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3575,
            "description": "Class: Connectors.Flowchart\nProvides 'flowchart' connectors, consisting of vertical and horizontal line segments.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3579,
            "description": "Function: Constructor\n\nParameters:\n\tstub - minimum length for the stub at each end of the connector. defaults to 30 pixels.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3597,
            "description": "recalculates the gradients of each segment, and the points at which the segments begin, proportional to the total length travelled \nby all the segments that constitute the connector.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3626,
            "description": "helper method to add a segment.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3634,
            "description": "returns [segment, proportion of travel in segment, segment index] for the segment \nthat contains the point which is 'location' distance along the entire path, where \n'location' is a decimal between 0 and 1 inclusive. in this connector type, paths \nare made up of a list of segments, each of which contributes some fraction to\nthe total length.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3733,
            "description": "returns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for this connector we must first figure out which segment the given point lies in, and then compute the x,y position\nfrom our knowledge of the segment's start and end points.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3742,
            "description": "returns the gradient of the connector at the given point; the gradient will be either 0 or Infinity, depending on the direction of the\nsegment the point falls in. segment gradients are calculated in the compute method.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3750,
            "description": "returns the point on the connector's path that is 'distance' along the length of the path from 'location', where \n'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.  when you consider this concept from the point of view\nof this connector, it starts to become clear that there's a problem with the overlay paint code: given that this connector makes several\n90 degree turns, it's entirely possible that an arrow overlay could be forced to paint itself around a corner, which would look stupid. this is\nbecause jsPlumb uses this method (and pointOnPath) so determine the locations of the various points that go to make up an overlay.  a better\nsolution would probably be to just use pointOnPath along with gradientAtPoint, and draw the overlay so that its axis ran along\na tangent to the connector.  for straight line connectors this would obviously mean the overlay was painted directly on the connector, since a \ntangent to a straight line is the line itself, which is what we want; for this connector, and for beziers, the results would probably be better.  an additional\nadvantage is, of course, that there's less computation involved doing it that way.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3772,
            "description": "calculates a line that is perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nthe line is 'length' pixels long.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3792,
            "description": "Class: Endpoints.Dot\nA round endpoint, with default radius 10 pixels.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3797,
            "description": "Function: Constructor\n\nParameters:\n\n\tradius\t-\tradius of the endpoint.  defaults to 10 pixels.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3819,
            "description": "Class: Endpoints.Rectangle\nA Rectangular Endpoint, with default size 20x20.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3823,
            "description": "Function: Constructor\n\nParameters:\n\n\twidth\t- width of the endpoint. defaults to 20 pixels.\n\theight\t- height of the endpoint. defaults to 20 pixels.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3846,
            "description": "Class: Endpoints.Image\nDraws an image as the Endpoint.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3850,
            "description": "Function: Constructor\n\nParameters:\n\n\tsrc\t-\tlocation of the image to use.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3907,
            "description": "Class: Endpoints.Blank\nAn Endpoint that paints nothing on the screen, and cannot be interacted with using the mouse.  There are no constructor parameters for this Endpoint.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3921,
            "description": "Class: Endpoints.Triangle\nA triangular Endpoint.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3925,
            "description": "Function: Constructor\n\nParameters:\n\n\twidth\t-\twidth of the triangle's base.  defaults to 55 pixels.\n\theight\t-\theight of the triangle from base to apex.  defaults to 55 pixels.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3952,
            "description": "Class: Overlays.Arrow\n\nAn arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length\nof the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction\nof the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line\nacross the tail.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 3960,
            "description": "Function: Constructor\n\nParameters:\n\n\tlength - distance in pixels from head to tail baseline. default 20.\n\twidth - width in pixels of the tail baseline. default 20.\n\tfillStyle - style to use when filling the arrow.  defaults to \"black\".\n\tstrokeStyle - style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.\n\tlineWidth - line width to use when stroking the arrow. defaults to 1, but only used if strokeStyle is not null.\n\tfoldback - distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.\n\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.\n\tdirection - indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4051,
            "description": "Class: Overlays.PlainArrow\n\nA basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some\npoint along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does\na 'call' to Arrow with foldback set appropriately.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4058,
            "description": "Function: Constructor\nSee <Overlays.Arrow> for allowed parameters for this overlay.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4068,
            "description": "Class: Overlays.Diamond\n\nA diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just\nhappens that in this case, that point is greater than the length of the the arrow.    \n\n     this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the\n     center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of\n     stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value\n     would be -l/4 in this case - move along one quarter of the total length.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4079,
            "description": "Function: Constructor\nSee <Overlays.Arrow> for allowed parameters for this overlay.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4092,
            "description": "Class: Overlays.Label\nA Label overlay. For all different renderer types (SVG/Canvas/VML), jsPlumb draws a Label overlay as a styled DIV.  Version 1.3.0 of jsPlumb\nintroduced the ability to set css classes on the label; this is now the preferred way for you to style a label.  The 'labelStyle' parameter\nis still supported in 1.3.0 but its usage is deprecated.  Under the hood, jsPlumb just turns that object into a bunch of CSS directive that it \nputs on the Label's 'style' attribute, so the end result is the same.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4099,
            "description": "Function: Constructor\n\nParameters:\n\tcssClass - optional css class string to append to css class. This string is appended \"as-is\", so you can of course have multiple classes\n            defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.\n\tlabel - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your\n        label function returns null.  empty strings _will_ be painted.\n\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n\tlabelStyle - (deprecated) js object containing style instructions for the label. defaults to jsPlumb.Defaults.LabelStyle. \n\tborderWidth - (deprecated) width of a border to paint.  defaults to zero.\n\tborderStyle - (deprecated) strokeStyle to use when painting the border, if necessary.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4471,
            "description": "placeholder for Blank endpoint in vml renderer.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4476,
            "description": "VML Label renderer. uses the default label renderer (which adds an element to the DOM)",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 4955,
            "description": "returns whether or not the given event is ojver a painted area of the canvas.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5041,
            "description": "Class:CanvasConnector\nSuperclass for Canvas Connector renderers.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5099,
            "description": "Class:CanvasEndpoint\nSuperclass for Canvas Endpoint renderers.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5324,
            "description": "a placeholder right now, really just exists to mirror the fact that there are SVG and VML versions of this.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5420,
            "description": "adds the given class to the element object.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5427,
            "description": "animates the given element.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5434,
            "description": "appends the given child to the given parent.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5441,
            "description": "event binding wrapper.  it just so happens that jQuery uses 'bind' also.  yui3, for example,\nuses 'on'.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5450,
            "description": "mapping of drag events for jQuery",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5458,
            "description": "wrapper around the library's 'extend' functionality (which it hopefully has.\notherwise you'll have to do it yourself). perhaps jsPlumb could do this for you\ninstead.  it's not like its hard.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5467,
            "description": "gets the named attribute from the given element object.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5480,
            "description": "takes the args passed to an event function and returns you an object representing that which is being dragged.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5491,
            "description": "gets an \"element object\" from the given input.  this means an object that is used by the\nunderlying library on which jsPlumb is running.  'el' may already be one of these objects,\nin which case it is returned as-is.  otherwise, 'el' is a String, the library's lookup \nfunction is used to find the element, using the given String as the element's id.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5502,
            "description": "gets the offset for the element object.  this should return a js object like this:\n\n{ left:xxx, top: xxx }",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5527,
            "description": "gets the size for the element object, in an array : [ width, height ].",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5534,
            "description": "takes the args passed to an event function and returns you an object that gives the\nposition of the object being moved, as a js object with the same params as the result of\ngetOffset, ie: { left: xxx, top: xxx }.\n\ndifferent libraries have different signatures for their event callbacks.  \nsee getDragObject as well",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5562,
            "description": "initialises the given element to be draggable.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5572,
            "description": "initialises the given element to be droppable.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5585,
            "description": "returns whether or not drag is supported (by the library, not whether or not it is disabled) for the given element.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5592,
            "description": "returns whether or not drop is supported (by the library, not whether or not it is disabled) for the given element.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5599,
            "description": "removes the given class from the element object.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5610,
            "description": "sets the named attribute on the given element object.",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5617,
            "description": "sets the draggable state for the given element",
            "class": ""
        },
        {
            "file": "tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js",
            "line": 5624,
            "description": "sets the drag scope.  probably time for a setDragOption method (roll this and the one above together)",
            "params": [
                {
                    "name": "el",
                    "description": ""
                },
                {
                    "name": "scope",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "tests/miscellaneous/exampleConnector.js",
            "line": 39,
            "description": "an arrow that folds back on itself instead of having a straight back edge. by default the foldback point is 62.3% along the length of the\narrow, which is roughly a golden ratio along the arrow and therefore looks quite nice. you can change that by setting the 'foldback' \nparameter when you construct this.  available params are:\n\nlength - length in pixels of the arrow\nwidth - width in pixels of the arrow's tail at its widest point\nfoldback - a decimal value indicating where along the arrow the tail points should fold back in to.",
            "class": ""
        },
        {
            "file": "tests/unit/all/tests.js",
            "line": 6759,
            "description": "Tests that the `getOffset` function correctly ignores body scroll when adjusting for parent element scroll.",
            "itemtype": "method",
            "name": "Test.offset_body_scroll",
            "class": ""
        },
        {
            "file": "tests/unit/all/tests.js",
            "line": 6827,
            "description": "Tests endpoint mouse interaction via event triggering: the ability to drag a connection to another\nendpoint, what happens when it is full, if it is disabled etc.",
            "itemtype": "method",
            "name": "jsPlumb.Test.EndpointEventTriggering",
            "class": ""
        },
        {
            "file": "tests/unit/all/tests.js",
            "line": 7390,
            "description": "Tests the `extract` parameter on a `makeSource` call: extract provides a map of attribute names that you want to\nread fom the source element when a drag starts, and whose values end up in the connection's data, keyed by the\nvalue from the extract map. In this test we get the attribute `foo` and insert its value into the connection's\ndata, keyed as `fooAttribute`.",
            "class": ""
        },
        {
            "file": "tests/unit/all/tests.js",
            "line": 7683,
            "description": "Tests that `endpoint` and `anchor` in a makeSource definition are honoured. The next test uses a connection type\nbut has the makeSource override the anchor.",
            "class": ""
        },
        {
            "file": "tests/unit/all/tests.js",
            "line": 7702,
            "description": "Tests that makeSource, when given `endpoint` and/or `anchor` values, will override any that were derived\nfrom an applied type.",
            "class": ""
        },
        {
            "file": "tests/unit/all/tests.js",
            "line": 7734,
            "description": "Tests that makeSource, when given `endpoint` and/or `anchor` values, will override any that were derived\nfrom an applied type.",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1,
            "description": "QUnit v1.11.0 - A JavaScript Unit Testing Framework\n\nhttp://qunitjs.com\n\nCopyright 2012 jQuery Foundation and other contributors\nReleased under the MIT license.\nhttp://jquery.org/license",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 36,
            "description": "Provides a normalized error string, correcting an issue\nwith IE 7 (and prior) where Error.prototype.toString is\nnot properly implemented\n\nBased on http://es5.github.com/#x15.11.4.4",
            "params": [
                {
                    "name": "error",
                    "description": "",
                    "type": "String|Error"
                }
            ],
            "return": {
                "description": "error message",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 65,
            "description": "Makes a clone of an object using only Array or Object as base,\nand copies over the own enumerable properties.",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "New object with only the own properties (recursively).",
                "type": "Object"
            },
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 497,
            "description": "Asserts rough true-ish result.",
            "name": "",
            "itemtype": "method",
            "example": [
                " ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );"
            ],
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 534,
            "description": "Assert that the first two arguments are equal, with an optional message.\nPrints out both actual and expected values.",
            "name": "",
            "itemtype": "method",
            "example": [
                " equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );"
            ],
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 546,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 555,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 565,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 575,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 583,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 591,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 599,
            "name": "",
            "itemtype": "method",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 650,
            "deprecate": "since 1.8.0\nKept assertion helpers in root for backwards compatibility.",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 656,
            "deprecated": true,
            "deprecationMessage": "since 1.9.0\nKept root \"raises()\" for backwards compatibility.\n(Note that we don't introduce assert.raises).",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 663,
            "deprecated": true,
            "deprecationMessage": "since 1.0.0, replaced with error pushes since 1.3.0\nKept to avoid TypeErrors for undefined methods.",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 683,
            "description": "Config object: Maintain internal state\nLater exposed as QUnit.config\n`config` initialized at top of scope",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1004,
            "deprecated": true,
            "deprecationMessage": ": Created for backwards compatibility with test runner that set the hook function\ninto QUnit.{hook}, instead of invoking it and passing the hook function.\nQUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\nDoing this allows us to tell if the following methods have been overwritten on the actual\nQUnit object.",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1290,
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1378,
            "description": "Escape text for attribute or text content.",
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1495,
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1510,
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array|NodeList"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": ""
        },
        {
            "file": "tests/unit/qunit-1.11.0.js",
            "line": 1752,
            "description": "jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\nhttp://flesler.blogspot.com Licensed under BSD\n(http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008",
            "projectdescription": "Advanced and extensible data dumping for Javascript.",
            "version": "1.0.0",
            "author": "Ariel Flesler",
            "link": "{http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:479"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:479"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:479"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:497"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:497"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:497"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:508"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:508"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:508"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:521"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:521"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:521"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:542"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:542"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:542"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:561"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:561"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:561"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:582"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:582"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:582"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:600"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:600"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:600"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:617"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:617"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:617"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:2087"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:2087"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:2087"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/experiments/npm/browserify-test.js:2107"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/experiments/npm/browserify-test.js:2107"
        },
        {
            "message": "unknown tag: desc",
            "line": " tests/experiments/npm/browserify-test.js:2107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tests/experiments/npm/browserify-test.js:2297"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tests/experiments/npm/browserify-test.js:2318"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tests/experiments/npm/browserify-test.js:4106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tests/experiments/npm/browserify-test.js:12133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3330"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/all/tests.js:5"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:497"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:497"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:534"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:534"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:546"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:546"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:555"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:555"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:565"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:565"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:575"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:575"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:583"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:583"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:591"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:591"
        },
        {
            "message": "unknown tag: name",
            "line": " tests/unit/qunit-1.11.0.js:599"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " tests/unit/qunit-1.11.0.js:599"
        },
        {
            "message": "unknown tag: deprecate",
            "line": " tests/unit/qunit-1.11.0.js:650"
        },
        {
            "message": "unknown tag: projectdescription",
            "line": " tests/unit/qunit-1.11.0.js:1752"
        },
        {
            "message": "unknown tag: version",
            "line": " tests/unit/qunit-1.11.0.js:1752"
        },
        {
            "message": "unknown tag: link",
            "line": " tests/unit/qunit-1.11.0.js:1752"
        },
        {
            "message": "Missing item type\njsBezier-0.8\n\nCopyright (c) 2010 - 2016 jsPlumb (hello@jsplumbtoolkit.com)\n\nlicensed under the MIT license.\n\na set of Bezier curve functions that deal with Beziers, used by jsPlumb, and perhaps useful for other people.  These functions work with Bezier\ncurves of arbitrary degree.\n\n- functions are all in the 'jsBezier' namespace.\n\n- all input points should be in the format {x:.., y:..}. all output points are in this format too.\n\n- all input curves should be in the format [ {x:.., y:..}, {x:.., y:..}, {x:.., y:..}, {x:.., y:..} ]\n\n- 'location' as used as an input here refers to a decimal in the range 0-1 inclusive, which indicates a point some proportion along the length\nof the curve.  location as output has the same format and meaning.\n\n\nFunction List:\n--------------\n\ndistanceFromCurve(point, curve)\n\n\tCalculates the distance that the given point lies from the given Bezier.  Note that it is computed relative to the center of the Bezier,\nso if you have stroked the curve with a wide pen you may wish to take that into account!  The distance returned is relative to the values\nof the curve and the point - it will most likely be pixels.\n\ngradientAtPoint(curve, location)\n\n\tCalculates the gradient to the curve at the given location, as a decimal between 0 and 1 inclusive.\n\ngradientAtPointAlongCurveFrom (curve, location)\n\n\tCalculates the gradient at the point on the given curve that is 'distance' units from location.\n\nnearestPointOnCurve(point, curve)\n\n\tCalculates the nearest point to the given point on the given curve.  The return value of this is a JS object literal, containing both the\npoint's coordinates and also the 'location' of the point (see above), for example:  { point:{x:551,y:150}, location:0.263365 }.\n\npointOnCurve(curve, location)\n\n\tCalculates the coordinates of the point on the given Bezier curve at the given location.\n\npointAlongCurveFrom(curve, location, distance)\n\n\tCalculates the coordinates of the point on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\nspace as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n\nlocationAlongCurveFrom(curve, location, distance)\n\n\tCalculates the location on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\nspace as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n\nperpendicularToCurveAt(curve, location, length, distance)\n\n\tCalculates the perpendicular to the given curve at the given location.  length is the length of the line you wish for (it will be centered\non the point at 'location'). distance is optional, and allows you to specify a point along the path from the given location as the center of\nthe perpendicular returned.  The return value of this is an array of two points: [ {x:...,y:...}, {x:...,y:...} ].",
            "line": " tests/experiments/npm/browserify-test.js:12"
        },
        {
            "message": "Missing item type\nCalculates the distance that the point lies from the curve.",
            "line": " tests/experiments/npm/browserify-test.js:95"
        },
        {
            "message": "Missing item type\nfinds the nearest point on the curve to the given point.",
            "line": " tests/experiments/npm/browserify-test.js:128"
        },
        {
            "message": "Missing item type\ncounts how many roots there are.",
            "line": " tests/experiments/npm/browserify-test.js:167"
        },
        {
            "message": "Missing item type\ncalculates a point on the curve, for a Bezier of arbitrary order.",
            "line": " tests/experiments/npm/browserify-test.js:301"
        },
        {
            "message": "Missing item type\nfinds the point that is 'distance' along the path from 'location'.  this method returns both the x,y location of the point and also\nits 'location' (proportion of travel along the path); the method below - _pointAlongPathFrom - calls this method and just returns the\npoint.",
            "line": " tests/experiments/npm/browserify-test.js:325"
        },
        {
            "message": "Missing item type\nfinds the point that is 'distance' along the path from 'location'.",
            "line": " tests/experiments/npm/browserify-test.js:372"
        },
        {
            "message": "Missing item type\nfinds the location that is 'distance' along the path from 'location'.",
            "line": " tests/experiments/npm/browserify-test.js:379"
        },
        {
            "message": "Missing item type\nreturns the gradient of the curve at the given location, which is a decimal between 0 and 1 inclusive.\n\nthanks // http://bimixual.org/AnimationLibrary/beziertangents.html",
            "line": " tests/experiments/npm/browserify-test.js:386"
        },
        {
            "message": "Missing item type\nreturns the gradient of the curve at the point which is 'distance' from the given location.\nif this point is greater than location 1, the gradient at location 1 is returned.\nif this point is less than location 0, the gradient at location 0 is returned.",
            "line": " tests/experiments/npm/browserify-test.js:398"
        },
        {
            "message": "Missing item type\ncalculates a line that is 'length' pixels long, perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nif distance is not supplied, the perpendicular for the given location is computed (ie. we set distance to zero).",
            "line": " tests/experiments/npm/browserify-test.js:410"
        },
        {
            "message": "Missing item type\nBiltong v0.3\n\nVarious geometry functions written as part of jsPlumb and perhaps useful for others.\n\nCopyright (c) 2016 jsPlumb\nhttps://jsplumbtoolkit.com\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.",
            "line": " tests/experiments/npm/browserify-test.js:437"
        },
        {
            "message": "Missing item type\ndrag/drop functionality for use with jsPlumb but with\nno knowledge of jsPlumb. supports multiple scopes (separated by whitespace), dragging\nmultiple elements, constrain to parent, drop filters, drag start filters, custom\ncss classes.\n\na lot of the functionality of this script is expected to be plugged in:\n\naddClass\nremoveClass\n\naddEvent\nremoveEvent\n\ngetPosition\nsetPosition\ngetSize\n\nindexOf\nintersects\n\nthe name came from here:\n\nhttp://mrsharpoblunto.github.io/foswig.js/\n\ncopyright 2016 jsPlumb",
            "line": " tests/experiments/npm/browserify-test.js:1256"
        },
        {
            "message": "Missing item type\nSets whether or not the Drag is constrained. A value of 'true' means constrain to parent bounds; a function\nwill be executed and returns true if the position is allowed.",
            "line": " tests/experiments/npm/browserify-test.js:1541"
        },
        {
            "message": "Missing item type\nSets a function to call on drag stop, which, if it returns true, indicates that the given element should\nrevert to its position before the previous drag.",
            "line": " tests/experiments/npm/browserify-test.js:1551"
        },
        {
            "message": "Missing item type\nChanges the participation state for the element in the Posse with the given ID.",
            "line": " tests/experiments/npm/browserify-test.js:2393"
        },
        {
            "message": "Missing item type\ncreates a timestamp, using milliseconds since 1970, but as a string.",
            "line": " tests/experiments/npm/browserify-test.js:2977"
        },
        {
            "message": "Missing item type\ninits a draggable if it's not already initialised.\nTODO: somehow abstract this to the adapter, because the concept of \"draggable\" has no\nplace on the server.",
            "line": " tests/experiments/npm/browserify-test.js:3671"
        },
        {
            "message": "Missing item type\nprivate method to do the business of toggling hiding/showing.",
            "line": " tests/experiments/npm/browserify-test.js:4047"
        },
        {
            "message": "Missing item type\ngets an id for the given element, creating and setting one if\nnecessary.  the id is of the form\n\n   jsPlumb_<instance index>_<index in instance>\n\nwhere \"index in instance\" is a monotonically increasing integer that starts at 0,\nfor each instance.  this method is used not only to assign ids to elements that do not\nhave them but also to connections and endpoints.",
            "line": " tests/experiments/npm/browserify-test.js:4073"
        },
        {
            "message": "Missing item type\nReturns a map of all the elements this jsPlumbInstance is currently managing.",
            "line": " tests/experiments/npm/browserify-test.js:4106"
        },
        {
            "message": "Missing item type\nchecks for a listener for the given condition, executing it if found, passing in the given value.\ncondition listeners would have been attached using \"bind\" (which is, you could argue, now overloaded, since\nfiring click events etc is a bit different to what this does).  i thought about adding a \"bindCondition\"\nor something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these\ncondition events anyway.",
            "line": " tests/experiments/npm/browserify-test.js:4214"
        },
        {
            "message": "Missing item type\nupdates the offset and size for a given element, and stores the\nvalues. if 'offset' is not null we use that (it would have been\npassed in from a drag call) because it's faster; but if it is null,\nor if 'recalc' is true in order to force a recalculation, we get the current values.",
            "line": " tests/experiments/npm/browserify-test.js:4890"
        },
        {
            "message": "Missing item type\ncallback from the current library to tell us to prepare ourselves (attach\nmouse listeners etc; can't do that until the library has provided a bind method)",
            "line": " tests/experiments/npm/browserify-test.js:4935"
        },
        {
            "message": "Missing item type\nmakes a list of anchors from the given list of types or coords, eg\n[\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]",
            "line": " tests/experiments/npm/browserify-test.js:5036"
        },
        {
            "message": "Missing item type\nMakes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\nobjects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\nnot need to provide this - i think).",
            "line": " tests/experiments/npm/browserify-test.js:5051"
        },
        {
            "message": "Missing item type\nRemove the given element, including cleaning up all endpoints registered for it.\nThis is exposed in the public API but also used internally by jsPlumb when removing the\nelement associated with a connection drag.",
            "line": " tests/experiments/npm/browserify-test.js:5753"
        },
        {
            "message": "Missing item type\nManages dragging for some instance of jsPlumb.\n\nTODO instead of this being accessed directly, it should subscribe to events on the jsPlumb instance: every method\nin here is called directly by jsPlumb. But what should happen is that we have unpublished events that this listens\nto.  The only trick is getting one of these instantiated with every jsPlumb instance: it needs to have a hook somehow.\nBasically the general idea is to pull ALL the drag code out (prototype method registrations plus this) into a\ndedicated drag script), that does not necessarily need to be included.",
            "line": " tests/experiments/npm/browserify-test.js:6126"
        },
        {
            "message": "Missing item type\nregister some element as draggable.  right now the drag init stuff is done elsewhere, and it is\npossible that will continue to be the case.",
            "line": " tests/experiments/npm/browserify-test.js:6142"
        },
        {
            "message": "Missing item type\nnotification that an endpoint was added to the given el.  we go up from that el's parent\nnode, looking for a parent that has been registered as a draggable. if we find one, we add this\nel to that parent's list of elements to update on drag (if it is not there already)",
            "line": " tests/experiments/npm/browserify-test.js:6215"
        },
        {
            "message": "Missing item type\ngets the size for the element, in an array : [ width, height ].",
            "line": " tests/experiments/npm/browserify-test.js:6605"
        },
        {
            "message": "Missing item type\nprivate but must be exposed.",
            "line": " tests/experiments/npm/browserify-test.js:7284"
        },
        {
            "message": "Missing item type\nreturns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.",
            "line": " tests/experiments/npm/browserify-test.js:7320"
        },
        {
            "message": "Missing item type\nprivate but needs to be exposed.",
            "line": " tests/experiments/npm/browserify-test.js:7884"
        },
        {
            "message": "Missing item type\nAnchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\nwas required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\nor by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\ncreation of Anchors without user intervention.",
            "line": " tests/experiments/npm/browserify-test.js:9399"
        },
        {
            "message": "Missing item type\nAn Anchor that floats. its orientation is computed dynamically from\nits position relative to the anchor it is floating relative to.  It is used when creating\na connection through drag and drop.\n\nTODO FloatingAnchor could totally be refactored to extend Anchor just slightly.",
            "line": " tests/experiments/npm/browserify-test.js:9468"
        },
        {
            "message": "Missing item type\nnotification the endpoint associated with this anchor is hovering\nover another anchor; we want to assume that anchor's orientation\nfor the duration of the hover.",
            "line": " tests/experiments/npm/browserify-test.js:9526"
        },
        {
            "message": "Missing item type\nnotification the endpoint associated with this anchor is no\nlonger hovering over another anchor; we should resume calculating\norientation as we normally do.",
            "line": " tests/experiments/npm/browserify-test.js:9535"
        },
        {
            "message": "Missing item type\nFunction: findClosestPointOnPath\nFinds the closest point on this segment to the given [x, y],\nreturning both the x and y of the point plus its distance from\nthe supplied point, and its location along the length of the\npath inscribed by the segment.  This implementation returns\nInfinity for distance and null values for everything else;\nsubclasses are expected to override.",
            "line": " tests/experiments/npm/browserify-test.js:9896"
        },
        {
            "message": "Missing item type\nreturns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for the straight line segment this is simple maths.",
            "line": " tests/experiments/npm/browserify-test.js:9962"
        },
        {
            "message": "Missing item type\nreturns the gradient of the segment at the given point - which for us is constant.",
            "line": " tests/experiments/npm/browserify-test.js:9977"
        },
        {
            "message": "Missing item type\nreturns the point on the segment's path that is 'distance' along the length of the path from 'location', where\n'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.\nthis hands off to jsPlumbUtil to do the maths, supplying two points and the distance.",
            "line": " tests/experiments/npm/browserify-test.js:9984"
        },
        {
            "message": "Missing item type\nFunction: findClosestPointOnPath\nFinds the closest point on this segment to [x,y]. See\nnotes on this method in AbstractSegment.",
            "line": " tests/experiments/npm/browserify-test.js:10014"
        },
        {
            "message": "Missing item type\nreturns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive.",
            "line": " tests/experiments/npm/browserify-test.js:10163"
        },
        {
            "message": "Missing item type\nreturns the gradient of the segment at the given point.",
            "line": " tests/experiments/npm/browserify-test.js:10187"
        },
        {
            "message": "Missing item type\nreturns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive.",
            "line": " tests/experiments/npm/browserify-test.js:10237"
        },
        {
            "message": "Missing item type\nreturns the gradient of the segment at the given point.",
            "line": " tests/experiments/npm/browserify-test.js:10246"
        },
        {
            "message": "Missing item type\nFunction: findSegmentForPoint\nReturns the segment that is closest to the given [x,y],\nnull if nothing found.  This function returns a JS\nobject with:\n\n  d   -   distance from segment\n  l   -   proportional location in segment\n  x   -   x point on the segment\n  y   -   y point on the segment\n  s   -   the segment itself.",
            "line": " tests/experiments/npm/browserify-test.js:10333"
        },
        {
            "message": "Missing item type\nreturns [segment, proportion of travel in segment, segment index] for the segment\nthat contains the point which is 'location' distance along the entire path, where\n'location' is a decimal between 0 and 1 inclusive. in this connector type, paths\nare made up of a list of segments, each of which contributes some fraction to\nthe total length.\nFrom 1.3.10 this also supports the 'absolute' property, which lets us specify a location\nas the absolute distance in pixels, rather than a proportion of the total path.",
            "line": " tests/experiments/npm/browserify-test.js:10375"
        },
        {
            "message": "Missing item type\nClass: Connectors.Straight\nThe Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.",
            "line": " tests/experiments/npm/browserify-test.js:10542"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Dot\nA round endpoint, with default radius 10 pixels.",
            "line": " tests/experiments/npm/browserify-test.js:10585"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n   radius    -    radius of the endpoint.  defaults to 10 pixels.",
            "line": " tests/experiments/npm/browserify-test.js:10590"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Image\nDraws an image as the Endpoint.",
            "line": " tests/experiments/npm/browserify-test.js:10655"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n   src    -    location of the image to use.\n\n    TODO: multiple references to self. not sure quite how to get rid of them entirely. perhaps self = null in the cleanup\n    function will suffice\n\n    TODO this class still might leak memory.",
            "line": " tests/experiments/npm/browserify-test.js:10659"
        },
        {
            "message": "Missing item type",
            "line": " tests/experiments/npm/browserify-test.js:11720"
        },
        {
            "message": "Missing item type\nhelper method to add a segment.",
            "line": " tests/experiments/npm/browserify-test.js:12189"
        },
        {
            "message": "Missing item type\nutility methods for other objects to use.",
            "line": " tests/experiments/npm/browserify-test.js:12980"
        },
        {
            "message": "Missing item type\nfirst example endpoint.  it's a 25x21 rectangle (the size is provided in the 'style' arg to the Endpoint), and it's both a source\nand target.  the 'scope' of this Endpoint is 'exampleConnection', meaning any connection starting from this Endpoint is of type\n'exampleConnection' and can only be dropped on an Endpoint target that declares 'exampleEndpoint' as its drop scope, and also that\nonly 'exampleConnection' types can be dropped here.\n \nthe connection style for this endpoint is a Bezier curve (we didn't provide one, so we use the default), with a lineWidth of\n5 pixels, and a gradient.\n \nnote the use of the '$.extend' function to setup generic connection types.  this will save you a lot of typing, and probably\nerrors.",
            "line": " tests/miscellaneous/issue_106_test/js/EndPoints.js:10"
        },
        {
            "message": "Missing item type\nthe second example uses a Dot of radius 15 as the endpoint marker, is both a source and target, and has scope\n'exampleConnection2'.",
            "line": " tests/miscellaneous/issue_106_test/js/EndPoints.js:98"
        },
        {
            "message": "Missing item type\nthe third example uses a Dot of radius 17 as the endpoint marker, is both a source and target, and has scope\n'exampleConnection3'.  it uses a Straight connector, and the Anchor is created here (bottom left corner) and never\noverriden, so it appears in the same place on every element.\n\nthis example also sets the 'reattach' flag for the Endpoint, meaning that when you drag a\nconnection off an endpoint and release it, it snaps back.  the default behaviour in this case\nis to delete the connection.",
            "line": " tests/miscellaneous/issue_106_test/js/EndPoints.js:116"
        },
        {
            "message": "Missing item type\nClass:jsPlumb\nThe jsPlumb engine, registered as a static object in the window.  This object contains all of the methods you will use to\ncreate and maintain Connections and Endpoints.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:21"
        },
        {
            "message": "Missing item type\nhelper method to add an item to a list, creating the list if it does\nnot yet exist.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:63"
        },
        {
            "message": "Missing item type\nEventGenerator\nSuperclass for objects that generate events - jsPlumb extends this, as does jsPlumbUIComponent, which all the UI elements extend.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:95"
        },
        {
            "message": "Missing item type\nmap of element id -> endpoint lists. an element can have an arbitrary\nnumber of endpoints on it, and not all of them have to be connected\nto anything.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:353"
        },
        {
            "message": "Missing item type\nhelper method to add an item to a list, creating the list if it does\nnot yet exist.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:372"
        },
        {
            "message": "Missing item type\nappends an element to the given parent, or the document body if no\nparent given.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:386"
        },
        {
            "message": "Missing item type\ncreates a timestamp, using milliseconds since 1970, but as a string.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:397"
        },
        {
            "message": "Missing item type\nYUI, for some reason, put the result of a Y.all call into an object that contains\na '_nodes' array, instead of handing back an array-like object like the other\nlibraries do.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:402"
        },
        {
            "message": "Missing item type\nDraws an endpoint and its connections.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:411"
        },
        {
            "message": "Missing item type\nexecutes the given function against the given element if the first\nargument is an object, or the list of elements, if the first argument\nis a list. the function passed in takes (element, elementId) as\narguments.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:452"
        },
        {
            "message": "Missing item type\ngets an Endpoint by uuid.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:473"
        },
        {
            "message": "Missing item type\ninits a draggable if it's not already initialised.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:478"
        },
        {
            "message": "Missing item type\nperforms the given function operation on all the connections found\nfor the given element id; this means we find all the endpoints for\nthe given element, and then for each endpoint find the connectors\nconnected to it. then we pass each connection in to the given\nfunction.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:540"
        },
        {
            "message": "Missing item type\nperform an operation on all elements.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:560"
        },
        {
            "message": "Missing item type\nhelper to remove an element from the DOM.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:569"
        },
        {
            "message": "Missing item type\nhelper to remove a list of elements from the DOM.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:577"
        },
        {
            "message": "Missing item type\nhelper method to remove an item from a list.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:584"
        },
        {
            "message": "Missing item type\nSets whether or not the given element(s) should be draggable,\nregardless of what a particular plumb command may request.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:601"
        },
        {
            "message": "Missing item type\nprivate method to do the business of hiding/showing.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:619"
        },
        {
            "message": "Missing item type\ntoggles the draggable state of the given element(s).",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:634"
        },
        {
            "message": "Missing item type\nprivate method to do the business of toggling hiding/showing.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:650"
        },
        {
            "message": "Missing item type\nupdates the offset and size for a given element, and stores the\nvalues. if 'offset' is not null we use that (it would have been\npassed in from a drag call) because it's faster; but if it is null,\nor if 'recalc' is true in order to force a recalculation, we get the current values.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:665"
        },
        {
            "message": "Missing item type\ngets an id for the given element, creating and setting one if\nnecessary.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:692"
        },
        {
            "message": "Missing item type\nwraps one function with another, creating a placeholder for the\nwrapped function if it was null. this is used to wrap the various\ndrag/drop event functions - to allow jsPlumb to be notified of\nimportant lifecycle events without imposing itself on the user's\ndrag/drop functionality. TODO: determine whether or not we should\nsupport an error handler concept, if one of the functions fails.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:710"
        },
        {
            "message": "Missing item type",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1121"
        },
        {
            "message": "Missing item type",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1149"
        },
        {
            "message": "Missing item type\nFunction:getEndpoints\nGets the list of Endpoints for a given selector, or element id.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1320"
        },
        {
            "message": "Missing item type\ncallback from the current library to tell us to prepare ourselves (attach\nmouse listeners etc; can't do that until the library has provided a bind method)",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1354"
        },
        {
            "message": "Missing item type\nmakes a list of anchors from the given list of types or coords, eg\n[\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1467"
        },
        {
            "message": "Missing item type\nMakes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\nobjects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\nnot need to provide this - i think).",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1481"
        },
        {
            "message": "Missing item type\nFunction: makeTarget\nMakes some DOM element a Connection target, allowing you to drag connections to it\nwithout having to register any Endpoints on it first.  When a Connection is established,\nthe endpoint spec that was passed in to this method is used to create a suitable \nEndpoint (the default will be used if you do not provide one).\n\nParameters:\n el\t\t-\tstring id or element selector for the element to make a target.\n\tparams\t-\tJS object containing parameters:\n\t  endpoint\toptional.\tspecification of an endpoint to create when a connection is created.\n\t  scope\t\toptional.   scope for the drop zone.\n\t  dropOptions optional. same stuff as you would pass to dropOptions of an Endpoint definition.\n\t  deleteEndpointsOnDetach  optional, defaults to false. whether or not to delete\n                            any Endpoints created by a connection to this target if\n                            the connection is subsequently detached. this will not \n                            remove Endpoints that have had more Connections attached\n                            to them after they were created.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1490"
        },
        {
            "message": "Missing item type\nhelper method to make a list of elements drop targets.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1560"
        },
        {
            "message": "Missing item type\ngets some test hooks. nothing writable.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1822"
        },
        {
            "message": "Missing item type\nToggles visibility of an element's connections. kept for backwards\ncompatibility",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1844"
        },
        {
            "message": "Missing item type\nAnchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\nwas required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\nor by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\ncreation of Anchors without user intervention.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1902"
        },
        {
            "message": "Missing item type\nAn Anchor that floats. its orientation is computed dynamically from\nits position relative to the anchor it is floating relative to.  It is used when creating \na connection through drag and drop.\n\nTODO FloatingAnchor could totally be refactored to extend Anchor just slightly.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:1947"
        },
        {
            "message": "Missing item type\nnotification the endpoint associated with this anchor is hovering\nover another anchor; we want to assume that anchor's orientation\nfor the duration of the hover.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2000"
        },
        {
            "message": "Missing item type\nnotification the endpoint associated with this anchor is no\nlonger hovering over another anchor; we should resume calculating\norientation as we normally do.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2007"
        },
        {
            "message": "Missing item type\nFunction:isVisible\nReturns whether or not the Connection is currently visible.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2115"
        },
        {
            "message": "Missing item type\nFunction: setVisible\nSets whether or not the Connection should be visible.\n\nParameters:\n\tvisible - boolean indicating desired visible state.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2120"
        },
        {
            "message": "Missing item type\nProperty: source\nThe source element for this Connection.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2134"
        },
        {
            "message": "Missing item type\nProperty:target\nThe target element for this Connection.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2139"
        },
        {
            "message": "Missing item type\nimplementation of abstract method in EventGenerator",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2159"
        },
        {
            "message": "Missing item type\nimplementation of abstract method in EventGenerator",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2167"
        },
        {
            "message": "Missing item type\nFunction: removeAllOverlays\nRemoves all overlays from the Connection, and then repaints.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2411"
        },
        {
            "message": "Missing item type\nFunction:removeOverlay\nRemoves an overlay by ID.  Note: by ID.  this is a string you set in the overlay spec.\nParameters:\noverlayId - id of the overlay to remove.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2420"
        },
        {
            "message": "Missing item type\nFunction:removeOverlay\nRemoves an overlay by ID.  Note: by ID.  this is a string you set in the overlay spec.\nParameters:\noverlayIds - this function takes an arbitrary number of arguments, each of which is a single overlay id.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2437"
        },
        {
            "message": "Missing item type\nprivate but must be exposed.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2845"
        },
        {
            "message": "Missing item type\nprivate but needs to be exposed.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2871"
        },
        {
            "message": "Missing item type\nreturns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2878"
        },
        {
            "message": "Missing item type\na deep equals check. everything must match, including the anchor,\nstyles, everything. TODO: finish Endpoint.equals",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2917"
        },
        {
            "message": "Missing item type",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:2972"
        },
        {
            "message": "Missing item type\nHelper class to consume unused mouse events by components that are DOM elements and\n are used by all of the different rendering modes.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3303"
        },
        {
            "message": "Missing item type\nClass: Connectors.Straight\nThe Straight connector draws a simple straight line between the two anchor points.  It does not have any constructor parameters.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3320"
        },
        {
            "message": "Missing item type\nComputes the new size and position of the canvas.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3330"
        },
        {
            "message": "Missing item type\nreturns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3387"
        },
        {
            "message": "Missing item type\nreturns the gradient of the connector at the given point - which for us is constant.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3397"
        },
        {
            "message": "Missing item type\nreturns the point on the connector's path that is 'distance' along the length of the path from 'location', where \n'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3402"
        },
        {
            "message": "Missing item type\ncalculates a line that is perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nthe line is 'length' pixels long.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3416"
        },
        {
            "message": "Missing item type\nClass:Connectors.Bezier\nThis Connector draws a Bezier curve with two control points.  You can provide a 'curviness' value which gets applied to jsPlumb's\ninternal voodoo machine and ends up generating locations for the two control points.  See the constructor documentation below.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3431"
        },
        {
            "message": "Missing item type\nFunction:Constructor\n\nParameters:\n\tcurviness - How 'curvy' you want the curve to be! This is a directive for the placement of control points, not endpoints of the curve, so your curve does not \nactually touch the given point, but it has the tendency to lean towards it.  The larger this value, the greater the curve is pulled from a straight line.\nOptional; defaults to 150.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3436"
        },
        {
            "message": "Missing item type\nreturns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for the straight line connector this is simple maths.  for Bezier, not so much.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3537"
        },
        {
            "message": "Missing item type\nreturns the gradient of the connector at the given point.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3545"
        },
        {
            "message": "Missing item type\nfor Bezier curves this method is a little tricky, cos calculating path distance algebraically is notoriously difficult.\nthis method is iterative, jumping forward .05% of the path at a time and summing the distance between this point and the previous\none, until the sum reaches 'distance'. the method may turn out to be computationally expensive; we'll see.\nanother drawback of this method is that if the connector gets quite long, .05% of the length of it is not necessarily smaller\nthan the desired distance, in which case the loop returns immediately and the arrow is mis-shapen. so a better strategy might be to\ncalculate the step as a function of distance/distance between endpoints.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3552"
        },
        {
            "message": "Missing item type\ncalculates a line that is perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nthe line is 'length' pixels long.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3564"
        },
        {
            "message": "Missing item type\nClass: Connectors.Flowchart\nProvides 'flowchart' connectors, consisting of vertical and horizontal line segments.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3575"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\tstub - minimum length for the stub at each end of the connector. defaults to 30 pixels.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3579"
        },
        {
            "message": "Missing item type\nrecalculates the gradients of each segment, and the points at which the segments begin, proportional to the total length travelled \nby all the segments that constitute the connector.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3597"
        },
        {
            "message": "Missing item type\nhelper method to add a segment.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3626"
        },
        {
            "message": "Missing item type\nreturns [segment, proportion of travel in segment, segment index] for the segment \nthat contains the point which is 'location' distance along the entire path, where \n'location' is a decimal between 0 and 1 inclusive. in this connector type, paths \nare made up of a list of segments, each of which contributes some fraction to\nthe total length.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3634"
        },
        {
            "message": "Missing item type\nreturns the point on the connector's path that is 'location' along the length of the path, where 'location' is a decimal from\n0 to 1 inclusive. for this connector we must first figure out which segment the given point lies in, and then compute the x,y position\nfrom our knowledge of the segment's start and end points.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3733"
        },
        {
            "message": "Missing item type\nreturns the gradient of the connector at the given point; the gradient will be either 0 or Infinity, depending on the direction of the\nsegment the point falls in. segment gradients are calculated in the compute method.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3742"
        },
        {
            "message": "Missing item type\nreturns the point on the connector's path that is 'distance' along the length of the path from 'location', where \n'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.  when you consider this concept from the point of view\nof this connector, it starts to become clear that there's a problem with the overlay paint code: given that this connector makes several\n90 degree turns, it's entirely possible that an arrow overlay could be forced to paint itself around a corner, which would look stupid. this is\nbecause jsPlumb uses this method (and pointOnPath) so determine the locations of the various points that go to make up an overlay.  a better\nsolution would probably be to just use pointOnPath along with gradientAtPoint, and draw the overlay so that its axis ran along\na tangent to the connector.  for straight line connectors this would obviously mean the overlay was painted directly on the connector, since a \ntangent to a straight line is the line itself, which is what we want; for this connector, and for beziers, the results would probably be better.  an additional\nadvantage is, of course, that there's less computation involved doing it that way.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3750"
        },
        {
            "message": "Missing item type\ncalculates a line that is perpendicular to, and centered on, the path at 'distance' pixels from the given location.\nthe line is 'length' pixels long.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3772"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Dot\nA round endpoint, with default radius 10 pixels.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3792"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n\tradius\t-\tradius of the endpoint.  defaults to 10 pixels.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3797"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Rectangle\nA Rectangular Endpoint, with default size 20x20.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3819"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n\twidth\t- width of the endpoint. defaults to 20 pixels.\n\theight\t- height of the endpoint. defaults to 20 pixels.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3823"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Image\nDraws an image as the Endpoint.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3846"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n\tsrc\t-\tlocation of the image to use.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3850"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Blank\nAn Endpoint that paints nothing on the screen, and cannot be interacted with using the mouse.  There are no constructor parameters for this Endpoint.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3907"
        },
        {
            "message": "Missing item type\nClass: Endpoints.Triangle\nA triangular Endpoint.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3921"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n\twidth\t-\twidth of the triangle's base.  defaults to 55 pixels.\n\theight\t-\theight of the triangle from base to apex.  defaults to 55 pixels.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3925"
        },
        {
            "message": "Missing item type\nClass: Overlays.Arrow\n\nAn arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length\nof the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction\nof the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line\nacross the tail.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3952"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\n\tlength - distance in pixels from head to tail baseline. default 20.\n\twidth - width in pixels of the tail baseline. default 20.\n\tfillStyle - style to use when filling the arrow.  defaults to \"black\".\n\tstrokeStyle - style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.\n\tlineWidth - line width to use when stroking the arrow. defaults to 1, but only used if strokeStyle is not null.\n\tfoldback - distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.\n\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.\n\tdirection - indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:3960"
        },
        {
            "message": "Missing item type\nClass: Overlays.PlainArrow\n\nA basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some\npoint along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does\na 'call' to Arrow with foldback set appropriately.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4051"
        },
        {
            "message": "Missing item type\nFunction: Constructor\nSee <Overlays.Arrow> for allowed parameters for this overlay.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4058"
        },
        {
            "message": "Missing item type\nClass: Overlays.Diamond\n\nA diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just\nhappens that in this case, that point is greater than the length of the the arrow.    \n\n     this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the\n     center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of\n     stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value\n     would be -l/4 in this case - move along one quarter of the total length.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4068"
        },
        {
            "message": "Missing item type\nFunction: Constructor\nSee <Overlays.Arrow> for allowed parameters for this overlay.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4079"
        },
        {
            "message": "Missing item type\nClass: Overlays.Label\nA Label overlay. For all different renderer types (SVG/Canvas/VML), jsPlumb draws a Label overlay as a styled DIV.  Version 1.3.0 of jsPlumb\nintroduced the ability to set css classes on the label; this is now the preferred way for you to style a label.  The 'labelStyle' parameter\nis still supported in 1.3.0 but its usage is deprecated.  Under the hood, jsPlumb just turns that object into a bunch of CSS directive that it \nputs on the Label's 'style' attribute, so the end result is the same.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4092"
        },
        {
            "message": "Missing item type\nFunction: Constructor\n\nParameters:\n\tcssClass - optional css class string to append to css class. This string is appended \"as-is\", so you can of course have multiple classes\n            defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.\n\tlabel - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your\n        label function returns null.  empty strings _will_ be painted.\n\tlocation - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n\tlabelStyle - (deprecated) js object containing style instructions for the label. defaults to jsPlumb.Defaults.LabelStyle. \n\tborderWidth - (deprecated) width of a border to paint.  defaults to zero.\n\tborderStyle - (deprecated) strokeStyle to use when painting the border, if necessary.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4099"
        },
        {
            "message": "Missing item type\nplaceholder for Blank endpoint in vml renderer.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4471"
        },
        {
            "message": "Missing item type\nVML Label renderer. uses the default label renderer (which adds an element to the DOM)",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4476"
        },
        {
            "message": "Missing item type\nreturns whether or not the given event is ojver a painted area of the canvas.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:4955"
        },
        {
            "message": "Missing item type\nClass:CanvasConnector\nSuperclass for Canvas Connector renderers.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5041"
        },
        {
            "message": "Missing item type\nClass:CanvasEndpoint\nSuperclass for Canvas Endpoint renderers.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5099"
        },
        {
            "message": "Missing item type\na placeholder right now, really just exists to mirror the fact that there are SVG and VML versions of this.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5324"
        },
        {
            "message": "Missing item type\nadds the given class to the element object.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5420"
        },
        {
            "message": "Missing item type\nanimates the given element.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5427"
        },
        {
            "message": "Missing item type\nappends the given child to the given parent.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5434"
        },
        {
            "message": "Missing item type\nevent binding wrapper.  it just so happens that jQuery uses 'bind' also.  yui3, for example,\nuses 'on'.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5441"
        },
        {
            "message": "Missing item type\nmapping of drag events for jQuery",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5450"
        },
        {
            "message": "Missing item type\nwrapper around the library's 'extend' functionality (which it hopefully has.\notherwise you'll have to do it yourself). perhaps jsPlumb could do this for you\ninstead.  it's not like its hard.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5458"
        },
        {
            "message": "Missing item type\ngets the named attribute from the given element object.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5467"
        },
        {
            "message": "Missing item type\ntakes the args passed to an event function and returns you an object representing that which is being dragged.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5480"
        },
        {
            "message": "Missing item type\ngets an \"element object\" from the given input.  this means an object that is used by the\nunderlying library on which jsPlumb is running.  'el' may already be one of these objects,\nin which case it is returned as-is.  otherwise, 'el' is a String, the library's lookup \nfunction is used to find the element, using the given String as the element's id.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5491"
        },
        {
            "message": "Missing item type\ngets the offset for the element object.  this should return a js object like this:\n\n{ left:xxx, top: xxx }",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5502"
        },
        {
            "message": "Missing item type\ngets the size for the element object, in an array : [ width, height ].",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5527"
        },
        {
            "message": "Missing item type\ntakes the args passed to an event function and returns you an object that gives the\nposition of the object being moved, as a js object with the same params as the result of\ngetOffset, ie: { left: xxx, top: xxx }.\n\ndifferent libraries have different signatures for their event callbacks.  \nsee getDragObject as well",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5534"
        },
        {
            "message": "Missing item type\ninitialises the given element to be draggable.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5562"
        },
        {
            "message": "Missing item type\ninitialises the given element to be droppable.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5572"
        },
        {
            "message": "Missing item type\nreturns whether or not drag is supported (by the library, not whether or not it is disabled) for the given element.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5585"
        },
        {
            "message": "Missing item type\nreturns whether or not drop is supported (by the library, not whether or not it is disabled) for the given element.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5592"
        },
        {
            "message": "Missing item type\nremoves the given class from the element object.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5599"
        },
        {
            "message": "Missing item type\nsets the named attribute on the given element object.",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5610"
        },
        {
            "message": "Missing item type\nsets the draggable state for the given element",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5617"
        },
        {
            "message": "Missing item type\nsets the drag scope.  probably time for a setDragOption method (roll this and the one above together)",
            "line": " tests/miscellaneous/issue_106_test/js/jquery.jsPlumb-1.3.1-all.js:5624"
        },
        {
            "message": "Missing item type\nan arrow that folds back on itself instead of having a straight back edge. by default the foldback point is 62.3% along the length of the\narrow, which is roughly a golden ratio along the arrow and therefore looks quite nice. you can change that by setting the 'foldback' \nparameter when you construct this.  available params are:\n\nlength - length in pixels of the arrow\nwidth - width in pixels of the arrow's tail at its widest point\nfoldback - a decimal value indicating where along the arrow the tail points should fold back in to.",
            "line": " tests/miscellaneous/exampleConnector.js:39"
        },
        {
            "message": "Missing item type\nTests the `extract` parameter on a `makeSource` call: extract provides a map of attribute names that you want to\nread fom the source element when a drag starts, and whose values end up in the connection's data, keyed by the\nvalue from the extract map. In this test we get the attribute `foo` and insert its value into the connection's\ndata, keyed as `fooAttribute`.",
            "line": " tests/unit/all/tests.js:7390"
        },
        {
            "message": "Missing item type\nTests that `endpoint` and `anchor` in a makeSource definition are honoured. The next test uses a connection type\nbut has the makeSource override the anchor.",
            "line": " tests/unit/all/tests.js:7683"
        },
        {
            "message": "Missing item type\nTests that makeSource, when given `endpoint` and/or `anchor` values, will override any that were derived\nfrom an applied type.",
            "line": " tests/unit/all/tests.js:7702"
        },
        {
            "message": "Missing item type\nTests that makeSource, when given `endpoint` and/or `anchor` values, will override any that were derived\nfrom an applied type.",
            "line": " tests/unit/all/tests.js:7734"
        },
        {
            "message": "Missing item type\nQUnit v1.11.0 - A JavaScript Unit Testing Framework\n\nhttp://qunitjs.com\n\nCopyright 2012 jQuery Foundation and other contributors\nReleased under the MIT license.\nhttp://jquery.org/license",
            "line": " tests/unit/qunit-1.11.0.js:1"
        },
        {
            "message": "Missing item type\nProvides a normalized error string, correcting an issue\nwith IE 7 (and prior) where Error.prototype.toString is\nnot properly implemented\n\nBased on http://es5.github.com/#x15.11.4.4",
            "line": " tests/unit/qunit-1.11.0.js:36"
        },
        {
            "message": "Missing item type\nMakes a clone of an object using only Array or Object as base,\nand copies over the own enumerable properties.",
            "line": " tests/unit/qunit-1.11.0.js:65"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:650"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:656"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:663"
        },
        {
            "message": "Missing item type\nConfig object: Maintain internal state\nLater exposed as QUnit.config\n`config` initialized at top of scope",
            "line": " tests/unit/qunit-1.11.0.js:683"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:1004"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:1290"
        },
        {
            "message": "Missing item type\nEscape text for attribute or text content.",
            "line": " tests/unit/qunit-1.11.0.js:1378"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:1495"
        },
        {
            "message": "Missing item type",
            "line": " tests/unit/qunit-1.11.0.js:1510"
        },
        {
            "message": "Missing item type\njsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\nhttp://flesler.blogspot.com Licensed under BSD\n(http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008",
            "line": " tests/unit/qunit-1.11.0.js:1752"
        }
    ]
}